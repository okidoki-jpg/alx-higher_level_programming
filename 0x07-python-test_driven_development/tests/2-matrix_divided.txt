Numbers
=======

``matrix_divided(matrix, div)`` return matrix with all elements divided by 'div'

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix = [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> matrix_divided(matrix, 2.0)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0.5)
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


ZeroDivision
============

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
      ...
    ZeroDivisionError: division by zero

Uneven Matrix
=============

::

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: Each row of the matrix must have the same size


Non-Numbers
===========

::

    >>> matrix = [[1, 2, 3], [4, 5, '6']]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, [6]]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, (6,)]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, {6}]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, {'6' : 6}]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, 6j]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = None
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [9, 41, 56]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[True, False], [1.1 , 2.2]]
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = "Hello World!"
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = []
    >>> matrix_divided(matrix, 2)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix))  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> print(matrix_divided(None))  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> print(matrix_divided())  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...


