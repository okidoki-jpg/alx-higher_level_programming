Numbers
=======

``print_square(size)`` Print a square with the character `#`

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####


Complex/Negative Numbers
========================

::

    >>> print_square(-5)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    ValueError: ...

    >>> print_square(5j)  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...
    

Non-Numbers
===========

::

    >>> print_square('5')  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> print_square([5])  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

    >>> print_square()  #doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: ...

